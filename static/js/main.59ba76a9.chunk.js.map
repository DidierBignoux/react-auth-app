{"version":3,"sources":["reducers/session.js","reducers/user.js","reducers/message.js","reducers/index.js","store/index.js","serviceWorker.js","components/Session/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","constants/routes.js","components/Session/withAuthorization.js","components/SignOut/index.js","constants/roles.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Messages/MessageItem.js","components/Messages/MessageList.js","components/Messages/Messages.js","components/Messages/index.js","components/Home/index.js","components/PasswordChange/index.js","components/ImageUpload/index.js","components/Account/index.js","components/Users/UserList.js","components/Users/UserItem.js","components/Admin/index.js","components/App/index.js","index.js"],"names":["INITIAL_STATE","authUser","applySetAuthUser","state","action","Object","objectSpread","sessionReducer","arguments","length","undefined","type","users","applySetUsers","applySetUser","defineProperty","uid","user","userReducer","messages","limit","applySetMessages","applySetMessagesLimit","messageReducer","rootReducer","combineReducers","sessionState","userState","messageState","store","createStore","Boolean","window","location","hostname","match","AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","assign","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","components_Firebase","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignInWithFacebook","facebookProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","once","then","snapshot","dbUser","val","roles","emailVerified","providerData","db","ref","concat","message","image","storage","images","app","initializeApp","serverValue","database","ServerValue","emailAuthProvider","EmailAuthProvider","GoogleAuthProvider","FacebookAuthProvider","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","JSON","parse","localStorage","getItem","inherits","createClass","key","value","_this2","listener","setItem","stringify","setState","removeItem","context","Provider","HOME","withAuthorization","condition","WithAuthorization","apply","history","push","compose","withRouter","_ref","onClick","ADMIN","NavigationAuth","Link","to","ROUTES","includes","ROLES","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","connect","Container","Row","Col","username","passwordOne","passwordTwo","isAdmin","error","urlProfile","SignUpFormBase","onSubmit","event","_this$state","set","catch","preventDefault","onChange","target","name","onChangeCheckbox","checked","_this$state2","isInvalid","placeholder","disabled","SignUpLink","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","Form","FormGroup","Label","for","Input","id","Button","outline","color","SignInGoogleBase","socialAuthUser","displayName","SignInFacebookBase","_this3","additionalUserInfo","profile","SignInForm","SignInGoogle","SignInFacebook","SignInPage","sm","md","size","offset","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","MessageItem","onToggleEditMode","editMode","editText","text","onChangeEditText","onSaveEditText","onEditMessage","_this$props","onRemoveMessage","userId","editedAt","MessageList","map","Messages_MessageItem","Messages","onListenForMessages","loading","orderByChild","limitToLast","on","messageObject","messageList","keys","onChangeText","onCreateMessage","createdAt","TIMESTAMP","remove","onNextPage","off","Messages_MessageList","HomePage","components_Messages","PasswordChangeForm","ImageUpload","handleChange","e","file","files","console","log","uploading","percent","url","uId","bind","assertThisInitialized","uploadToFirebase","storageRef","child","put","snap","getDownloadURL","err","style","marginTop","src","alt","height","width","PasswordChange","components_ImageUpload","UserList","onSetUsers","dispatch","UserItem","onSendPasswordResetEmail","params","onSetUser","Switch","Route","exact","path","component","BrowserRouter","components_Navigation","LandingPage","AccountPage","AdminPage","ReactDOM","render","es","Firebase_context","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.59ba76a9.chunk.js","sourcesContent":["const INITIAL_STATE = {\n  authUser: null,\n};\n\nconst applySetAuthUser = (state, action) => ({\n  ...state,\n  authUser: action.authUser,\n});\n\nfunction sessionReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'AUTH_USER_SET': {\n      return applySetAuthUser(state, action);\n    }\n    default:\n      return state;\n  }\n}\n\nexport default sessionReducer;\n","const INITIAL_STATE = {\n  users: null,\n};\n\nconst applySetUsers = (state, action) => ({\n  ...state,\n  users: action.users,\n});\n\nconst applySetUser = (state, action) => ({\n  ...state,\n  users: {\n    ...state.users,\n    [action.uid]: action.user,\n  },\n});\n\nfunction userReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'USERS_SET': {\n      return applySetUsers(state, action);\n    }\n    case 'USER_SET': {\n      return applySetUser(state, action);\n    }\n    default:\n      return state;\n  }\n}\n\nexport default userReducer;\n","const INITIAL_STATE = {\n  messages: null,\n  limit: 5,\n};\n\nconst applySetMessages = (state, action) => ({\n  ...state,\n  messages: action.messages,\n});\n\nconst applySetMessagesLimit = (state, action) => ({\n  ...state,\n  limit: action.limit,\n});\n\nfunction messageReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'MESSAGES_SET': {\n      return applySetMessages(state, action);\n    }\n    case 'MESSAGES_LIMIT_SET': {\n      return applySetMessagesLimit(state, action);\n    }\n    default:\n      return state;\n  }\n}\n\nexport default messageReducer;\n","import { combineReducers } from 'redux';\nimport sessionReducer from './session';\nimport userReducer from './user';\nimport messageReducer from './message';\n\nconst rootReducer = combineReducers({\n  sessionState: sessionReducer,\n  userState: userReducer,\n  messageState: messageReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage'\n\nconst config = {\n  apiKey: 'AIzaSyBEANmdfHVYIIGn8c-Oo6Azl716hPZEEJ0',\n  authDomain: 'auth-react-app-d37e7.firebaseapp.com',\n  databaseURL: 'https://auth-react-app-d37e7.firebaseio.com',\n  projectId: 'auth-react-app-d37e7',\n  storageBucket: 'auth-react-app-d37e7.appspot.com',\n  messagingSenderId: '60593339260',\n  appId: '1:60593339260:web:e4e8138c1dd416ed', \n};\n\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    /* Helper */\n\n    this.serverValue = app.database.ServerValue;\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\n\n    /* Firebase APIs */\n\n    this.auth = app.auth();\n    this.db = app.database();\n    this.storage = app.storage();\n    \n\n    /* Social Sign In Method Provider */\n\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\n\n  }\n\n  // *** Auth API ***\n\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignInWithGoogle = () =>\n    this.auth.signInWithPopup(this.googleProvider);\n\n  doSignInWithFacebook = () =>\n    this.auth.signInWithPopup(this.facebookProvider);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doPasswordUpdate = password =>\n    this.auth.currentUser.updatePassword(password);\n\n  // *** Merge Auth and DB User API *** //\n\n  onAuthUserListener = (next, fallback) =>\n    this.auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        this.user(authUser.uid)\n          .once('value')\n          .then(snapshot => {\n            const dbUser = snapshot.val();\n\n            // default empty roles\n            if (!dbUser.roles) {\n              dbUser.roles = [];\n            }\n\n            // merge auth and db user\n            authUser = {\n              uid: authUser.uid,\n              email: authUser.email,\n              emailVerified: authUser.emailVerified,\n              providerData: authUser.providerData,\n              ...dbUser,\n            };\n\n            next(authUser);\n          });\n      } else {\n        fallback();\n      }\n    });\n\n  // *** User API ***\n\n  user = uid => this.db.ref(`users/${uid}`);\n\n  users = () => this.db.ref('users');\n\n  // *** Message API ***\n\n  message = uid => this.db.ref(`messages/${uid}`);\n\n  messages = () => this.db.ref('messages');\n\n  // *** Storage images API ***\n  image = uid => this.storage.ref(`images/${uid}`);\n\n  images = () => this.storage.ref('images');\n  \n\n}\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: JSON.parse(localStorage.getItem('authUser')),\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          localStorage.setItem('authUser', JSON.stringify(authUser));\n          this.setState({ authUser });\n        },\n        () => {\n          localStorage.removeItem('authUser');\n          this.setState({ authUser: null });\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;","export const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const LANDING = '/';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const ADMIN = '/admin';\nexport const ADMIN_DETAILS = '/admin/:id';\n\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          if (!condition(authUser)) {\n            this.props.history.push(ROUTES.SIGN_IN);\n          }\n        },\n        () => this.props.history.push(ROUTES.SIGN_IN),\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    withRouter,\n    withFirebase,\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;","import React from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst SignOutButton = ({ firebase }) => (\n  <button type=\"button\" onClick={firebase.doSignOut}>\n    Sign Out\n  </button>\n);\n\nexport default withFirebase(SignOutButton);","export const ADMIN = 'ADMIN';","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { AuthUserContext } from '../Session';\nimport SignOutButton from '../SignOut';\nimport * as ROUTES from '../../constants/routes';\nimport * as ROLES from '../../constants/roles';\n\nconst Navigation = () => (\n  <AuthUserContext.Consumer>\n    {authUser =>\n      authUser ? (\n        <NavigationAuth authUser={authUser} />\n      ) : (\n        <NavigationNonAuth />\n      )\n    }\n  </AuthUserContext.Consumer>\n);\n\nconst NavigationAuth = ({ authUser }) => (\n  <ul>\n    <li>\n      <Link to={ROUTES.LANDING}>Landing</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\n    </li>\n    {authUser.roles.includes(ROLES.ADMIN) && (\n      <li>\n        <Link to={ROUTES.ADMIN}>Admin</Link>\n      </li>\n    )}\n    <li>\n      <SignOutButton />\n    </li>\n  </ul>\n);\n\nconst NavigationNonAuth = () => (\n  <ul>\n    <li>\n      <Link to={ROUTES.LANDING}>Landing</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n    </li>\n  </ul>\n);\n\nexport default Navigation;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\n\nimport { Container, Row, Col } from 'reactstrap';\n\nimport { AuthUserContext, withAuthorization } from '../Session';\n\nconst Landing = () => (\n  <AuthUserContext.Consumer>\n  {authUser => (\n    <Container>\n      <Row>\n        <Col>\n          <h1>LandingPages</h1>\n          <h3>Welecome {authUser.username}</h3>\n          <h3>email: {authUser.email}</h3>   \n          <h3>email: {authUser.uid}</h3>   \n        </Col>\n      </Row>\n    </Container>\n  )}\n</AuthUserContext.Consumer>\n);\n\nconst mapStateToProps = state => ({\n  authUser: state.sessionState.authUser,\n});\n\nconst authCondition = authUser => !!authUser;\n\nexport default compose(\n  connect(mapStateToProps),\n  withAuthorization(authCondition),\n)(Landing);\n\n\n\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport * as ROLES from '../../constants/roles';\n\nconst SignUpPage = () => (\n  <div>\n    <h1>SignUp</h1>\n    <SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '', \n  isAdmin: false,\n  error: null,\n  urlProfile: ''\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { username, email, passwordOne, isAdmin, urlProfile } = this.state;\n    const roles = [];\n\n    if (isAdmin) {\n      roles.push(ROLES.ADMIN);\n    }\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // Create a user in your Firebase realtime database\n        this.props.firebase\n          .user(authUser.user.uid)\n          .set({\n            username,\n            email,\n            roles,\n            urlProfile,\n                    \n          }\n          )\n          .then(() => {\n            this.setState({ ...INITIAL_STATE });\n            this.props.history.push(ROUTES.HOME);\n          })\n          .catch(error => {\n            this.setState({ error });\n          });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onChangeCheckbox = event => {\n    this.setState({ [event.target.name]: event.target.checked });\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      isAdmin,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <label>\n          Admin:\n          <input\n            name=\"isAdmin\"\n            type=\"checkbox\"\n            checked={isAdmin}\n            onChange={this.onChangeCheckbox}\n          />\n        </label>\n        <button disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\nexport default SignUpPage;\nexport { SignUpForm, SignUpLink };","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetPage = () => (\n  <div>\n    <h1>PasswordForget</h1>\n    <PasswordForgetForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };\n","import React, { Component } from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Input,\n  Form,\n  FormGroup,\n  Label,\n  Button,\n} from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => (\n  <Container>\n    <Row>\n      <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n        <h1>SignIn</h1>\n        <SignInForm />\n        <SignInGoogle />\n        <SignInFacebook />\n        <PasswordForgetLink />\n        <SignUpLink />\n      </Col>\n    </Row>\n  </Container>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <Form onSubmit={this.onSubmit}>\n        <FormGroup>\n          <Label for=\"signInEmail\">Email Address :</Label>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            id=\"signInEmail\"\n            placeholder=\"Email Address\"\n            value={email}\n            onChange={this.onChange}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Label for=\"signInPassword\">Password</Label>\n          <Input\n            name=\"password\"\n            id=\"signInPassword\"\n            value={password}\n            onChange={this.onChange}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </FormGroup>\n\n        <Button disabled={isInvalid} type=\"submit\" outline color=\"primary\">\n          Sign In\n        </Button>\n\n        {error && <p>{error.message}</p>}\n      </Form>\n    );\n  }\n}\n\nclass SignInGoogleBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithGoogle()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        this.props.firebase\n          .user(socialAuthUser.user.uid)\n          .set({\n            username: socialAuthUser.user.displayName,\n            email: socialAuthUser.user.email,\n            roles: [],\n          })\n          .then(() => {\n            this.setState({ error: null });\n            this.props.history.push(ROUTES.HOME);\n          })\n          .catch(error => {\n            this.setState({ error });\n          });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <Form onSubmit={this.onSubmit}>\n        <Button type=\"submit\">Sign In with Google</Button>\n\n        {error && <p>{error.message}</p>}\n      </Form>\n    );\n  }\n}\n\nclass SignInFacebookBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithFacebook()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        this.props.firebase\n          .user(socialAuthUser.user.uid)\n          .set({\n            username: socialAuthUser.additionalUserInfo.profile.name,\n            email: socialAuthUser.additionalUserInfo.profile.email,\n            roles: [],\n          })\n          .then(() => {\n            this.setState({ error: null });\n            this.props.history.push(ROUTES.HOME);\n          })\n          .catch(error => {\n            this.setState({ error });\n          });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <Form onSubmit={this.onSubmit}>\n        <Button type=\"submit\">Sign In with Facebook</Button>\n\n        {error && <p>{error.message}</p>}\n      </Form>\n    );\n  }\n}\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n\nconst SignInGoogle = compose(\n  withRouter,\n  withFirebase,\n)(SignInGoogleBase);\n\nconst SignInFacebook = compose(\n  withRouter,\n  withFirebase,\n)(SignInFacebookBase);\n\nexport default SignInPage;\n\nexport { SignInForm, SignInGoogle, SignInFacebook };\n","import React, { Component } from 'react';\n\nclass MessageItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editMode: false,\n      editText: this.props.message.text,\n    };\n  }\n\n  onToggleEditMode = () => {\n    this.setState(state => ({\n      editMode: !state.editMode,\n      editText: this.props.message.text,\n    }));\n  };\n\n  onChangeEditText = event => {\n    this.setState({ editText: event.target.value });\n  };\n\n  onSaveEditText = () => {\n    this.props.onEditMessage(this.props.message, this.state.editText);\n\n    this.setState({ editMode: false });\n  };\n\n  render() {\n    const { message, onRemoveMessage } = this.props;\n    const { editMode, editText } = this.state;\n\n    return (\n      <li>\n        {editMode ? (\n          <input\n            type=\"text\"\n            value={editText}\n            onChange={this.onChangeEditText}\n          />\n        ) : (\n          <span>\n            <strong>\n              {message.user.username || message.user.userId}\n            </strong>{' '}\n            {message.text} {message.editedAt && <span>(Edited)</span>}\n          </span>\n        )}\n\n        {editMode ? (\n          <span>\n            <button onClick={this.onSaveEditText}>Save</button>\n            <button onClick={this.onToggleEditMode}>Reset</button>\n          </span>\n        ) : (\n          <button onClick={this.onToggleEditMode}>Edit</button>\n        )}\n\n        {!editMode && (\n          <button\n            type=\"button\"\n            onClick={() => onRemoveMessage(message.uid)}\n          >\n            Delete\n          </button>\n        )}\n      </li>\n    );\n  }\n}\n\nexport default MessageItem;","import React from 'react';\n\nimport MessageItem from './MessageItem';\n\nconst MessageList = ({\n  messages,\n  onEditMessage,\n  onRemoveMessage,\n}) => (\n  <ul>\n    {messages.map(message => (\n      <MessageItem\n        key={message.uid}\n        message={message}\n        onEditMessage={onEditMessage}\n        onRemoveMessage={onRemoveMessage}\n      />\n    ))}\n  </ul>\n);\n\nexport default MessageList;","import React, { Component } from 'react';\n\nimport { AuthUserContext } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport MessageList from './MessageList';\n\nclass Messages extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: '',\n      loading: false,\n      messages: [],\n      limit: 5,\n    };\n  }\n\n  componentDidMount() {\n    this.onListenForMessages();\n  }\n\n  onListenForMessages = () => {\n    this.setState({ loading: true });\n\n    this.props.firebase\n      .messages()\n      .orderByChild('createdAt')\n      .limitToLast(this.state.limit)\n      .on('value', snapshot => {\n        const messageObject = snapshot.val();\n\n        if (messageObject) {\n          const messageList = Object.keys(messageObject).map(key => ({\n            ...messageObject[key],\n            uid: key,\n          }));\n\n          this.setState({\n            messages: messageList,\n            loading: false,\n          });\n        } else {\n          this.setState({ messages: null, loading: false });\n        }\n      });\n  };\n\n  componentWillUnmount() {\n    this.props.firebase.messages().off();\n  }\n\n  onChangeText = event => {\n    this.setState({ text: event.target.value });\n  };\n\n  onCreateMessage = (event, authUser) => {\n    this.props.firebase.messages().push({\n      text: this.state.text,\n      userId: authUser.uid,\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n\n    this.setState({ text: '' });\n\n    event.preventDefault();\n  };\n\n  onEditMessage = (message, text) => {\n    this.props.firebase.message(message.uid).set({\n      ...message,\n      text,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n  };\n\n  onRemoveMessage = uid => {\n    this.props.firebase.message(uid).remove();\n  };\n\n  onNextPage = () => {\n    this.setState(\n      state => ({ limit: state.limit + 5 }),\n      this.onListenForMessages,\n    );\n  };\n\n  render() {\n    const { users } = this.props;\n    const { text, messages, loading } = this.state;\n\n    return (\n      <AuthUserContext.Consumer>\n        {authUser => (\n          <div>\n            {!loading && messages && (\n              <button type=\"button\" onClick={this.onNextPage}>\n                More\n              </button>\n            )}\n\n            {loading && <div>Loading ...</div>}\n\n            {messages && (\n              <MessageList\n                messages={messages.map(message => ({\n                  ...message,\n                  user: users\n                    ? users[message.userId]\n                    : { userId: message.userId },\n                }))}\n                onEditMessage={this.onEditMessage}\n                onRemoveMessage={this.onRemoveMessage}\n              />\n            )}\n\n            {!messages && <div>There are no messages ...</div>}\n\n            <form\n              onSubmit={event =>\n                this.onCreateMessage(event, authUser)\n              }\n            >\n              <input\n                type=\"text\"\n                value={text}\n                onChange={this.onChangeText}\n              />\n              <button type=\"submit\">Send</button>\n            </form>\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(Messages);","import Messages from './Messages';\n\nexport default Messages;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\n\nimport { Container, Row, Col } from 'reactstrap';\n\nimport { AuthUserContext, withAuthorization } from '../Session';\n\nimport Messages from '../Messages';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      users: null,\n    };\n  }\n\n  componentDidMount() {\n    this.props.firebase.users().on('value', snapshot => {\n      this.setState({\n        users: snapshot.val(),\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    return (\n      <AuthUserContext.Consumer>\n        {authUser => (\n          <Container>\n            <Row>\n              <Col>\n                <h1>Home Page</h1>\n                <h3>Welecome {authUser.username}</h3>\n\n                <p>\n                  The Home Page is accessible by every signed in user.\n                </p>\n              </Col>\n            </Row>\n            <Messages users={this.state.users} />\n          </Container>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  authUser: state.sessionState.authUser,\n\n  \n});\n\nconst authCondition = authUser => !!authUser;\n\nexport default compose(\n  connect(mapStateToProps),\n  withAuthorization(authCondition),\n)(HomePage);\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\nimport { AuthUserContext } from '../Session';\n\nclass ImageUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      uploading: false,\n      percent: 0,\n      file: '',\n      error: '',\n      name: '',\n      url: '',\n      uId: this.props.id,\n    }; \n\n    this.handleChange = this.handleChange.bind(this);\n    this.uploadToFirebase = this.uploadToFirebase.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.firebase.users().on('value', snapshot => {\n      // const ImageObject = snapshot.val();\n\n      // console.log(snapshot.val());\n\n      // const messageList = Object.keys(ImageObject).map(key => ({\n      //   ...ImageObject[key],\n      //   uId: key,\n      // }));\n\n      // this.setState({\n      //   users: snapshot.val(),\n      // });\n    });\n  }\n\n  handleChange = (e, uid) => {\n    this.setState({ file: e.target.files[0] });\n    this.setState({ name: e.target.files[0].name });\n\n    console.log(this.state);\n   \n  };\n\n  uploadToFirebase(event) {\n    this.setState({ uploading: true });\n    const storageRef = this.props.firebase.images();\n\n    // console.log(this.state);\n   \n    \n\n    storageRef\n      .child(this.state.name)\n      .put(this.state.file)\n      .then(snap => {\n        this.setState({ uploading: false });    \n\n        // const x = this.state.name\n     \n        storageRef\n          .child(this.state.name)\n          .getDownloadURL()\n          .then(url => {  \n            console.log(url);\n\n            this.setState({ url: 'tamtam'});\n\n            // this.setState({ url: url });\n          });\n         \n          console.log('Uploaded a blob or file!');\n\n\n\n        // this.props.firebase.users().child('url').push({\n        //     url: this.state.url,\n        //     // userId: authUser.uid,\n\n        //   });\n      })\n      .catch(err => this.setState({ error: err.message }));\n\n\n      console.log(this.state);\n    event.preventDefault();\n  }\n\n  render() {\n\n    const style = {\n      marginTop: '10px'\n    }\n    return (\n      <AuthUserContext.Consumer>\n        {authUser => (\n          <div style = {style}>\n            <h6>Update your profile</h6>\n            <img\n              src={ this.state.urlProfile || 'https://firebasestorage.googleapis.com/v0/b/auth-react-app-d37e7.appspot.com/o/images%2FdefaultAvatar.png?alt=media&token=84b5f853-5c2a-40e0-9957-0a9601113f0c' }\n              alt=\"upload images\"\n              height=\"300\"\n              width=\"400\"\n            />\n\n            <input\n              type=\"file\"\n              onChange={event =>\n                this.handleChange(event, authUser.uid)\n              }\n            />\n            <br />\n            <button onClick={this.uploadToFirebase}>Upload</button>\n\n            <br />\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(ImageUpload);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\n\nimport { Container, Row, Col } from 'reactstrap';\n\nimport { AuthUserContext, withAuthorization } from '../Session';\n\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\nimport ImageUpload from '../ImageUpload';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <Container>\n        <Row>\n          <Col>\n            <h3>Welecome: {authUser.username}</h3>\n            <h3>email: {authUser.email}</h3>\n          \n            <PasswordForgetForm />\n            <PasswordChangeForm />\n            <ImageUpload id={authUser.id}/>\n            \n          </Col>\n        </Row>\n      </Container>\n    )}\n  </AuthUserContext.Consumer>\n);\nconst mapStateToProps = state => ({\n  authUser: state.sessionState.authUser,\n});\n\nconst authCondition = authUser => !!authUser;\n\nexport default compose(\n  connect(mapStateToProps),\n  withAuthorization(authCondition),\n)(AccountPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.users.length) {\n      this.setState({ loading: true });\n    }\n\n    this.props.firebase.users().on('value', snapshot => {\n      this.props.onSetUsers(snapshot.val());\n\n      this.setState({ loading: false });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    const { users } = this.props;\n    const { loading } = this.state;\n\n    return (\n      <div>\n        <h2>Users</h2>\n        {loading && <div>Loading ...</div>}\n        <ul>\n          {users.map(user => (\n            <li key={user.uid}>\n              <span>\n                <strong>ID:</strong> {user.uid}\n              </span>\n              <br/>\n              <span>\n                <strong>E-Mail:</strong> {user.email}\n              </span>\n              <br/>\n              <span>\n                <strong>Username:</strong> {user.username}\n              </span>\n              <br/>\n              <span>\n                <Link to={`${ROUTES.ADMIN}/${user.uid}`}>\n                  Details\n                </Link>\n              </span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: Object.keys(state.userState.users || {}).map(key => ({\n    ...state.userState.users[key],\n    uid: key,\n  })),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSetUsers: users => dispatch({ type: 'USERS_SET', users }),\n});\n\nexport default compose(\n  withFirebase,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  ),\n)(UserList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\n\nclass UserItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.user) {\n      this.setState({ loading: true });\n\n      this.props.firebase\n        .user(this.props.match.params.id)\n        .on('value', snapshot => {\n          this.props.onSetUser(\n            snapshot.val(),\n            this.props.match.params.id,\n          );\n\n          this.setState({ loading: false });\n        });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.user(this.props.match.params.id).off();\n  }\n\n  onSendPasswordResetEmail = () => {\n    this.props.firebase.doPasswordReset(this.props.user.email);\n  };\n\n  render() {\n    const { user } = this.props;\n    const { loading } = this.state;\n\n    return (\n      <div>\n        <h2>User ({this.props.match.params.id})</h2>\n        {loading && <div>Loading ...</div>}\n\n        {user && (\n          <div>\n            <span>\n              <strong>ID:</strong> {user.uid}\n            </span>\n            <span>\n              <strong>E-Mail:</strong> {user.email}\n            </span>\n            <span>\n              <strong>Username:</strong> {user.username}\n            </span>\n            <span>\n              <button\n                type=\"button\"\n                onClick={this.onSendPasswordResetEmail}\n              >\n                Send Password Reset\n              </button>\n            </span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => ({\n  user: (state.userState.users || {})[props.match.params.id],\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSetUser: (user, uid) => dispatch({ type: 'USER_SET', user, uid }),\n});\n\nexport default compose(\n  withFirebase,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  ),\n)(UserItem);","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withAuthorization } from '../Session';\nimport { UserList, UserItem } from '../Users';\nimport * as ROLES from '../../constants/roles';\nimport * as ROUTES from '../../constants/routes';\n\nconst AdminPage = () => (\n  <div>\n    <h1>Admin</h1>\n    <p>The Admin Page is accessible by every signed in admin user.</p>\n\n    <Switch>\n      <Route exact path={ROUTES.ADMIN_DETAILS} component={UserItem} />\n      <Route exact path={ROUTES.ADMIN} component={UserList} />\n    </Switch>\n  </div>\n);\n\nconst condition = authUser =>\n  authUser && authUser.roles.includes(ROLES.ADMIN);\n\nexport default compose(  \n  withAuthorization(condition),\n)(AdminPage);","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport PasswordForgetPage from '../PasswordForget';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\n\nimport * as ROUTES from '../../constants/routes';\nimport { withAuthentication } from '../Session';\n\nconst App = () => (\n  <Router>\n    <div>\n      <Navigation />\n\n      <hr />\n\n      <Route exact path={ROUTES.LANDING} component={LandingPage} />\n      <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\n      <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\n      <Route\n        exact\n        path={ROUTES.PASSWORD_FORGET}\n        component={PasswordForgetPage}\n      />\n      <Route exact path={ROUTES.HOME} component={HomePage} />\n      <Route exact path={ROUTES.ACCOUNT} component={AccountPage} />\n      <Route exact path={ROUTES.ADMIN} component={AdminPage} />\n    </div>\n  </Router>\n);\n\nexport default withAuthentication(App);","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <FirebaseContext.Provider value={new Firebase()}>\n      <App />\n    </FirebaseContext.Provider>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}