{"version":3,"sources":["reducers/session.js","reducers/user.js","reducers/message.js","reducers/index.js","store/index.js","serviceWorker.js","components/Session/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","constants/routes.js","components/Session/withAuthorization.js","components/SignOut/index.js","constants/roles.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Messages/MessageItem.js","components/Messages/MessageList.js","components/Messages/Messages.js","components/Messages/index.js","components/Home/index.js","components/PasswordChange/index.js","components/ImageUpload/index.js","components/Account/index.js","components/Users/UserList.js","components/Users/UserItem.js","components/Admin/index.js","components/App/index.js","index.js"],"names":["INITIAL_STATE","authUser","applySetAuthUser","state","action","Object","objectSpread","sessionReducer","arguments","length","undefined","type","users","applySetUsers","applySetUser","defineProperty","uid","user","userReducer","messages","limit","applySetMessages","applySetMessagesLimit","messageReducer","rootReducer","combineReducers","sessionState","userState","messageState","store","createStore","Boolean","window","location","hostname","match","AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","assign","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","components_Firebase","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignInWithFacebook","facebookProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","once","then","snapshot","dbUser","val","roles","emailVerified","providerData","db","ref","concat","message","image","storage","images","app","initializeApp","serverValue","database","ServerValue","emailAuthProvider","EmailAuthProvider","GoogleAuthProvider","FacebookAuthProvider","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","JSON","parse","localStorage","getItem","inherits","createClass","key","value","_this2","listener","setItem","stringify","setState","removeItem","context","Provider","HOME","withAuthorization","condition","WithAuthorization","apply","history","push","compose","withRouter","_ref","onClick","ADMIN","NavigationAuth","Link","to","ROUTES","includes","ROLES","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","connect","Container","Row","Col","username","passwordOne","passwordTwo","isAdmin","error","SignUpFormBase","onSubmit","event","_this$state","set","catch","preventDefault","onChange","target","name","onChangeCheckbox","checked","_this$state2","isInvalid","placeholder","disabled","SignUpLink","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","Form","FormGroup","Label","for","Input","id","Button","outline","color","SignInGoogleBase","socialAuthUser","displayName","SignInFacebookBase","_this3","additionalUserInfo","profile","SignInForm","SignInGoogle","SignInFacebook","SignInPage","sm","md","size","offset","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","MessageItem","onToggleEditMode","editMode","editText","text","onChangeEditText","onSaveEditText","onEditMessage","_this$props","onRemoveMessage","userId","editedAt","MessageList","map","Messages_MessageItem","Messages","onListenForMessages","loading","orderByChild","limitToLast","on","messageObject","messageList","keys","onChangeText","onCreateMessage","createdAt","TIMESTAMP","remove","onNextPage","off","Messages_MessageList","HomePage","components_Messages","PasswordChangeForm","InputUpload","handleChange","e","file","files","uploading","percent","url","bind","assertThisInitialized","uploadToFirebase","storageRef","console","log","child","put","snap","metadata","fullPath","getDownloadURL","err","src","alt","height","width","PasswordChange","ImageUpload","UserList","onSetUsers","dispatch","UserItem","onSendPasswordResetEmail","params","onSetUser","Switch","Route","exact","path","component","BrowserRouter","components_Navigation","LandingPage","AccountPage","AdminPage","ReactDOM","render","es","Firebase_context","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c07d0b82.chunk.js","sourcesContent":["const INITIAL_STATE = {\n  authUser: null,\n};\n\nconst applySetAuthUser = (state, action) => ({\n  ...state,\n  authUser: action.authUser,\n});\n\nfunction sessionReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'AUTH_USER_SET': {\n      return applySetAuthUser(state, action);\n    }\n    default:\n      return state;\n  }\n}\n\nexport default sessionReducer;\n","const INITIAL_STATE = {\n  users: null,\n};\n\nconst applySetUsers = (state, action) => ({\n  ...state,\n  users: action.users,\n});\n\nconst applySetUser = (state, action) => ({\n  ...state,\n  users: {\n    ...state.users,\n    [action.uid]: action.user,\n  },\n});\n\nfunction userReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'USERS_SET': {\n      return applySetUsers(state, action);\n    }\n    case 'USER_SET': {\n      return applySetUser(state, action);\n    }\n    default:\n      return state;\n  }\n}\n\nexport default userReducer;\n","const INITIAL_STATE = {\n  messages: null,\n  limit: 5,\n};\n\nconst applySetMessages = (state, action) => ({\n  ...state,\n  messages: action.messages,\n});\n\nconst applySetMessagesLimit = (state, action) => ({\n  ...state,\n  limit: action.limit,\n});\n\nfunction messageReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'MESSAGES_SET': {\n      return applySetMessages(state, action);\n    }\n    case 'MESSAGES_LIMIT_SET': {\n      return applySetMessagesLimit(state, action);\n    }\n    default:\n      return state;\n  }\n}\n\nexport default messageReducer;\n","import { combineReducers } from 'redux';\nimport sessionReducer from './session';\nimport userReducer from './user';\nimport messageReducer from './message';\n\nconst rootReducer = combineReducers({\n  sessionState: sessionReducer,\n  userState: userReducer,\n  messageState: messageReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage'\n\nconst config = {\n  apiKey: 'AIzaSyBEANmdfHVYIIGn8c-Oo6Azl716hPZEEJ0',\n  authDomain: 'auth-react-app-d37e7.firebaseapp.com',\n  databaseURL: 'https://auth-react-app-d37e7.firebaseio.com',\n  projectId: 'auth-react-app-d37e7',\n  storageBucket: 'auth-react-app-d37e7.appspot.com',\n  messagingSenderId: '60593339260',\n  appId: '1:60593339260:web:e4e8138c1dd416ed', \n};\n\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    /* Helper */\n\n    this.serverValue = app.database.ServerValue;\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\n\n    /* Firebase APIs */\n\n    this.auth = app.auth();\n    this.db = app.database();\n    this.storage = app.storage();\n    \n\n    /* Social Sign In Method Provider */\n\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\n\n  }\n\n  // *** Auth API ***\n\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignInWithGoogle = () =>\n    this.auth.signInWithPopup(this.googleProvider);\n\n  doSignInWithFacebook = () =>\n    this.auth.signInWithPopup(this.facebookProvider);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doPasswordUpdate = password =>\n    this.auth.currentUser.updatePassword(password);\n\n  // *** Merge Auth and DB User API *** //\n\n  onAuthUserListener = (next, fallback) =>\n    this.auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        this.user(authUser.uid)\n          .once('value')\n          .then(snapshot => {\n            const dbUser = snapshot.val();\n\n            // default empty roles\n            if (!dbUser.roles) {\n              dbUser.roles = [];\n            }\n\n            // merge auth and db user\n            authUser = {\n              uid: authUser.uid,\n              email: authUser.email,\n              emailVerified: authUser.emailVerified,\n              providerData: authUser.providerData,\n              ...dbUser,\n            };\n\n            next(authUser);\n          });\n      } else {\n        fallback();\n      }\n    });\n\n  // *** User API ***\n\n  user = uid => this.db.ref(`users/${uid}`);\n\n  users = () => this.db.ref('users');\n\n  // *** Message API ***\n\n  message = uid => this.db.ref(`messages/${uid}`);\n\n  messages = () => this.db.ref('messages');\n\n  // *** Storage images API ***\n  image = uid => this.storage.ref(`images/${uid}`);\n\n  images = () => this.storage.ref('images');\n  \n\n}\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: JSON.parse(localStorage.getItem('authUser')),\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          localStorage.setItem('authUser', JSON.stringify(authUser));\n          this.setState({ authUser });\n        },\n        () => {\n          localStorage.removeItem('authUser');\n          this.setState({ authUser: null });\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;","export const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const LANDING = '/';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const ADMIN = '/admin';\nexport const ADMIN_DETAILS = '/admin/:id';\n\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          if (!condition(authUser)) {\n            this.props.history.push(ROUTES.SIGN_IN);\n          }\n        },\n        () => this.props.history.push(ROUTES.SIGN_IN),\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    withRouter,\n    withFirebase,\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;","import React from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst SignOutButton = ({ firebase }) => (\n  <button type=\"button\" onClick={firebase.doSignOut}>\n    Sign Out\n  </button>\n);\n\nexport default withFirebase(SignOutButton);","export const ADMIN = 'ADMIN';","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { AuthUserContext } from '../Session';\nimport SignOutButton from '../SignOut';\nimport * as ROUTES from '../../constants/routes';\nimport * as ROLES from '../../constants/roles';\n\nconst Navigation = () => (\n  <AuthUserContext.Consumer>\n    {authUser =>\n      authUser ? (\n        <NavigationAuth authUser={authUser} />\n      ) : (\n        <NavigationNonAuth />\n      )\n    }\n  </AuthUserContext.Consumer>\n);\n\nconst NavigationAuth = ({ authUser }) => (\n  <ul>\n    <li>\n      <Link to={ROUTES.LANDING}>Landing</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\n    </li>\n    {authUser.roles.includes(ROLES.ADMIN) && (\n      <li>\n        <Link to={ROUTES.ADMIN}>Admin</Link>\n      </li>\n    )}\n    <li>\n      <SignOutButton />\n    </li>\n  </ul>\n);\n\nconst NavigationNonAuth = () => (\n  <ul>\n    <li>\n      <Link to={ROUTES.LANDING}>Landing</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n    </li>\n  </ul>\n);\n\nexport default Navigation;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\n\nimport { Container, Row, Col } from 'reactstrap';\n\nimport { AuthUserContext, withAuthorization } from '../Session';\n\nconst Landing = () => (\n  <AuthUserContext.Consumer>\n  {authUser => (\n    <Container>\n      <Row>\n        <Col>\n          <h1>LandingPages</h1>\n          <h3>Welecome {authUser.username}</h3>\n          <h3>email: {authUser.email}</h3>   \n        </Col>\n      </Row>\n    </Container>\n  )}\n</AuthUserContext.Consumer>\n);\n\nconst mapStateToProps = state => ({\n  authUser: state.sessionState.authUser,\n});\n\nconst authCondition = authUser => !!authUser;\n\nexport default compose(\n  connect(mapStateToProps),\n  withAuthorization(authCondition),\n)(Landing);\n\n\n\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport * as ROLES from '../../constants/roles';\n\nconst SignUpPage = () => (\n  <div>\n    <h1>SignUp</h1>\n    <SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  isAdmin: false,\n  error: null,\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { username, email, passwordOne, isAdmin } = this.state;\n    const roles = [];\n\n    if (isAdmin) {\n      roles.push(ROLES.ADMIN);\n    }\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // Create a user in your Firebase realtime database\n        this.props.firebase\n          .user(authUser.user.uid)\n          .set({\n            username,\n            email,\n            roles,\n          }\n          )\n          .then(() => {\n            this.setState({ ...INITIAL_STATE });\n            this.props.history.push(ROUTES.HOME);\n          })\n          .catch(error => {\n            this.setState({ error });\n          });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onChangeCheckbox = event => {\n    this.setState({ [event.target.name]: event.target.checked });\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      isAdmin,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <label>\n          Admin:\n          <input\n            name=\"isAdmin\"\n            type=\"checkbox\"\n            checked={isAdmin}\n            onChange={this.onChangeCheckbox}\n          />\n        </label>\n        <button disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\nexport default SignUpPage;\nexport { SignUpForm, SignUpLink };","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetPage = () => (\n  <div>\n    <h1>PasswordForget</h1>\n    <PasswordForgetForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };\n","import React, { Component } from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Input,\n  Form,\n  FormGroup,\n  Label,\n  Button,\n} from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => (\n  <Container>\n    <Row>\n      <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n        <h1>SignIn</h1>\n        <SignInForm />\n        <SignInGoogle />\n        <SignInFacebook />\n        <PasswordForgetLink />\n        <SignUpLink />\n      </Col>\n    </Row>\n  </Container>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <Form onSubmit={this.onSubmit}>\n        <FormGroup>\n          <Label for=\"signInEmail\">Email Address :</Label>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            id=\"signInEmail\"\n            placeholder=\"Email Address\"\n            value={email}\n            onChange={this.onChange}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Label for=\"signInPassword\">Password</Label>\n          <Input\n            name=\"password\"\n            id=\"signInPassword\"\n            value={password}\n            onChange={this.onChange}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </FormGroup>\n\n        <Button disabled={isInvalid} type=\"submit\" outline color=\"primary\">\n          Sign In\n        </Button>\n\n        {error && <p>{error.message}</p>}\n      </Form>\n    );\n  }\n}\n\nclass SignInGoogleBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithGoogle()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        this.props.firebase\n          .user(socialAuthUser.user.uid)\n          .set({\n            username: socialAuthUser.user.displayName,\n            email: socialAuthUser.user.email,\n            roles: [],\n          })\n          .then(() => {\n            this.setState({ error: null });\n            this.props.history.push(ROUTES.HOME);\n          })\n          .catch(error => {\n            this.setState({ error });\n          });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <Form onSubmit={this.onSubmit}>\n        <Button type=\"submit\">Sign In with Google</Button>\n\n        {error && <p>{error.message}</p>}\n      </Form>\n    );\n  }\n}\n\nclass SignInFacebookBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithFacebook()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        this.props.firebase\n          .user(socialAuthUser.user.uid)\n          .set({\n            username: socialAuthUser.additionalUserInfo.profile.name,\n            email: socialAuthUser.additionalUserInfo.profile.email,\n            roles: [],\n          })\n          .then(() => {\n            this.setState({ error: null });\n            this.props.history.push(ROUTES.HOME);\n          })\n          .catch(error => {\n            this.setState({ error });\n          });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <Form onSubmit={this.onSubmit}>\n        <Button type=\"submit\">Sign In with Facebook</Button>\n\n        {error && <p>{error.message}</p>}\n      </Form>\n    );\n  }\n}\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n\nconst SignInGoogle = compose(\n  withRouter,\n  withFirebase,\n)(SignInGoogleBase);\n\nconst SignInFacebook = compose(\n  withRouter,\n  withFirebase,\n)(SignInFacebookBase);\n\nexport default SignInPage;\n\nexport { SignInForm, SignInGoogle, SignInFacebook };\n","import React, { Component } from 'react';\n\nclass MessageItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editMode: false,\n      editText: this.props.message.text,\n    };\n  }\n\n  onToggleEditMode = () => {\n    this.setState(state => ({\n      editMode: !state.editMode,\n      editText: this.props.message.text,\n    }));\n  };\n\n  onChangeEditText = event => {\n    this.setState({ editText: event.target.value });\n  };\n\n  onSaveEditText = () => {\n    this.props.onEditMessage(this.props.message, this.state.editText);\n\n    this.setState({ editMode: false });\n  };\n\n  render() {\n    const { message, onRemoveMessage } = this.props;\n    const { editMode, editText } = this.state;\n\n    return (\n      <li>\n        {editMode ? (\n          <input\n            type=\"text\"\n            value={editText}\n            onChange={this.onChangeEditText}\n          />\n        ) : (\n          <span>\n            <strong>\n              {message.user.username || message.user.userId}\n            </strong>{' '}\n            {message.text} {message.editedAt && <span>(Edited)</span>}\n          </span>\n        )}\n\n        {editMode ? (\n          <span>\n            <button onClick={this.onSaveEditText}>Save</button>\n            <button onClick={this.onToggleEditMode}>Reset</button>\n          </span>\n        ) : (\n          <button onClick={this.onToggleEditMode}>Edit</button>\n        )}\n\n        {!editMode && (\n          <button\n            type=\"button\"\n            onClick={() => onRemoveMessage(message.uid)}\n          >\n            Delete\n          </button>\n        )}\n      </li>\n    );\n  }\n}\n\nexport default MessageItem;","import React from 'react';\n\nimport MessageItem from './MessageItem';\n\nconst MessageList = ({\n  messages,\n  onEditMessage,\n  onRemoveMessage,\n}) => (\n  <ul>\n    {messages.map(message => (\n      <MessageItem\n        key={message.uid}\n        message={message}\n        onEditMessage={onEditMessage}\n        onRemoveMessage={onRemoveMessage}\n      />\n    ))}\n  </ul>\n);\n\nexport default MessageList;","import React, { Component } from 'react';\n\nimport { AuthUserContext } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport MessageList from './MessageList';\n\nclass Messages extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: '',\n      loading: false,\n      messages: [],\n      limit: 5,\n    };\n  }\n\n  componentDidMount() {\n    this.onListenForMessages();\n  }\n\n  onListenForMessages = () => {\n    this.setState({ loading: true });\n\n    this.props.firebase\n      .messages()\n      .orderByChild('createdAt')\n      .limitToLast(this.state.limit)\n      .on('value', snapshot => {\n        const messageObject = snapshot.val();\n\n        if (messageObject) {\n          const messageList = Object.keys(messageObject).map(key => ({\n            ...messageObject[key],\n            uid: key,\n          }));\n\n          this.setState({\n            messages: messageList,\n            loading: false,\n          });\n        } else {\n          this.setState({ messages: null, loading: false });\n        }\n      });\n  };\n\n  componentWillUnmount() {\n    this.props.firebase.messages().off();\n  }\n\n  onChangeText = event => {\n    this.setState({ text: event.target.value });\n  };\n\n  onCreateMessage = (event, authUser) => {\n    this.props.firebase.messages().push({\n      text: this.state.text,\n      userId: authUser.uid,\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n\n    this.setState({ text: '' });\n\n    event.preventDefault();\n  };\n\n  onEditMessage = (message, text) => {\n    this.props.firebase.message(message.uid).set({\n      ...message,\n      text,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n  };\n\n  onRemoveMessage = uid => {\n    this.props.firebase.message(uid).remove();\n  };\n\n  onNextPage = () => {\n    this.setState(\n      state => ({ limit: state.limit + 5 }),\n      this.onListenForMessages,\n    );\n  };\n\n  render() {\n    const { users } = this.props;\n    const { text, messages, loading } = this.state;\n\n    return (\n      <AuthUserContext.Consumer>\n        {authUser => (\n          <div>\n            {!loading && messages && (\n              <button type=\"button\" onClick={this.onNextPage}>\n                More\n              </button>\n            )}\n\n            {loading && <div>Loading ...</div>}\n\n            {messages && (\n              <MessageList\n                messages={messages.map(message => ({\n                  ...message,\n                  user: users\n                    ? users[message.userId]\n                    : { userId: message.userId },\n                }))}\n                onEditMessage={this.onEditMessage}\n                onRemoveMessage={this.onRemoveMessage}\n              />\n            )}\n\n            {!messages && <div>There are no messages ...</div>}\n\n            <form\n              onSubmit={event =>\n                this.onCreateMessage(event, authUser)\n              }\n            >\n              <input\n                type=\"text\"\n                value={text}\n                onChange={this.onChangeText}\n              />\n              <button type=\"submit\">Send</button>\n            </form>\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(Messages);","import Messages from './Messages';\n\nexport default Messages;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\n\nimport { Container, Row, Col } from 'reactstrap';\n\nimport { AuthUserContext, withAuthorization } from '../Session';\n\nimport Messages from '../Messages';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      users: null,\n    };\n  }\n\n  componentDidMount() {\n    this.props.firebase.users().on('value', snapshot => {\n      this.setState({\n        users: snapshot.val(),\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    return (\n      <AuthUserContext.Consumer>\n        {authUser => (\n          <Container>\n            <Row>\n              <Col>\n                <h1>Home Page</h1>\n                <h3>Welecome {authUser.username}</h3>\n\n                <p>\n                  The Home Page is accessible by every signed in user.\n                </p>\n              </Col>\n            </Row>\n            <Messages users={this.state.users} />\n          </Container>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  authUser: state.sessionState.authUser,\n});\n\nconst authCondition = authUser => !!authUser;\n\nexport default compose(\n  connect(mapStateToProps),\n  withAuthorization(authCondition),\n)(HomePage);\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\nimport { AuthUserContext } from '../Session';\n\nclass InputUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      uploading: false,\n      percent: 0,\n      file: '',\n      error: '',\n      name: '',\n      url: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.uploadToFirebase = this.uploadToFirebase.bind(this);\n  }\n\n  handleChange = e => {\n    this.setState({ file: e.target.files[0] });\n    this.setState({ name: e.target.files[0].name });\n  };\n\n  uploadToFirebase(event, authUser) {\n    this.setState({ uploading: true });\n    const storageRef = this.props.firebase.images();\n\n    \n    console.log(this.state);\n\n    storageRef\n      .child(this.state.name)\n      .put(this.state.file)\n      .then(snap => {\n        this.setState({ uploading: false });\n\n        console.log('Uploaded a blob or file!');\n\n        console.log(snap.metadata.fullPath);\n        // const x = this.state.name\n\n        storageRef.getDownloadURL().then(url => {\n          console.log(url);\n          this.setState({ url: url });\n        });\n\n        this.props.firebase.users().child('url').push({\n            url: this.state.url,\n            // userId: authUser.uid,\n            \n          });\n\n\n      })\n      .catch(err => this.setState({ error: err.message }));\n\n    \n\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <AuthUserContext.Consumer>\n        {authUser => (\n          <div>\n            <h1>Firebase Upload Example</h1>\n            <input type=\"file\" onChange={this.handleChange} />\n            <br />\n            <button onClick={this.uploadToFirebase}>Upload</button>\n            <br />\n            <img\n              src={\n                this.state.url || 'http://via.placeholder.com/400x300'\n              }\n              alt=\"upload images\"\n              height=\"300\"\n              width=\"400\"\n            />\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(InputUpload);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\n\nimport { Container, Row, Col } from 'reactstrap';\n\nimport { AuthUserContext, withAuthorization } from '../Session';\n\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\nimport ImageUpload from '../ImageUpload';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <Container>\n        <Row>\n          <Col>\n            <h3>Welecome: {authUser.username}</h3>\n            <h3>email: {authUser.email}</h3>\n            <PasswordForgetForm />\n            <PasswordChangeForm />\n            <ImageUpload />\n          </Col>\n        </Row>\n      </Container>\n    )}\n  </AuthUserContext.Consumer>\n);\nconst mapStateToProps = state => ({\n  authUser: state.sessionState.authUser,\n});\n\nconst authCondition = authUser => !!authUser;\n\nexport default compose(\n  connect(mapStateToProps),\n  withAuthorization(authCondition),\n)(AccountPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.users.length) {\n      this.setState({ loading: true });\n    }\n\n    this.props.firebase.users().on('value', snapshot => {\n      this.props.onSetUsers(snapshot.val());\n\n      this.setState({ loading: false });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    const { users } = this.props;\n    const { loading } = this.state;\n\n    return (\n      <div>\n        <h2>Users</h2>\n        {loading && <div>Loading ...</div>}\n        <ul>\n          {users.map(user => (\n            <li key={user.uid}>\n              <span>\n                <strong>ID:</strong> {user.uid}\n              </span>\n              <br/>\n              <span>\n                <strong>E-Mail:</strong> {user.email}\n              </span>\n              <br/>\n              <span>\n                <strong>Username:</strong> {user.username}\n              </span>\n              <br/>\n              <span>\n                <Link to={`${ROUTES.ADMIN}/${user.uid}`}>\n                  Details\n                </Link>\n              </span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: Object.keys(state.userState.users || {}).map(key => ({\n    ...state.userState.users[key],\n    uid: key,\n  })),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSetUsers: users => dispatch({ type: 'USERS_SET', users }),\n});\n\nexport default compose(\n  withFirebase,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  ),\n)(UserList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\n\nclass UserItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.user) {\n      this.setState({ loading: true });\n\n      this.props.firebase\n        .user(this.props.match.params.id)\n        .on('value', snapshot => {\n          this.props.onSetUser(\n            snapshot.val(),\n            this.props.match.params.id,\n          );\n\n          this.setState({ loading: false });\n        });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.user(this.props.match.params.id).off();\n  }\n\n  onSendPasswordResetEmail = () => {\n    this.props.firebase.doPasswordReset(this.props.user.email);\n  };\n\n  render() {\n    const { user } = this.props;\n    const { loading } = this.state;\n\n    return (\n      <div>\n        <h2>User ({this.props.match.params.id})</h2>\n        {loading && <div>Loading ...</div>}\n\n        {user && (\n          <div>\n            <span>\n              <strong>ID:</strong> {user.uid}\n            </span>\n            <span>\n              <strong>E-Mail:</strong> {user.email}\n            </span>\n            <span>\n              <strong>Username:</strong> {user.username}\n            </span>\n            <span>\n              <button\n                type=\"button\"\n                onClick={this.onSendPasswordResetEmail}\n              >\n                Send Password Reset\n              </button>\n            </span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => ({\n  user: (state.userState.users || {})[props.match.params.id],\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSetUser: (user, uid) => dispatch({ type: 'USER_SET', user, uid }),\n});\n\nexport default compose(\n  withFirebase,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  ),\n)(UserItem);","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withAuthorization } from '../Session';\nimport { UserList, UserItem } from '../Users';\nimport * as ROLES from '../../constants/roles';\nimport * as ROUTES from '../../constants/routes';\n\nconst AdminPage = () => (\n  <div>\n    <h1>Admin</h1>\n    <p>The Admin Page is accessible by every signed in admin user.</p>\n\n    <Switch>\n      <Route exact path={ROUTES.ADMIN_DETAILS} component={UserItem} />\n      <Route exact path={ROUTES.ADMIN} component={UserList} />\n    </Switch>\n  </div>\n);\n\nconst condition = authUser =>\n  authUser && authUser.roles.includes(ROLES.ADMIN);\n\nexport default compose(  \n  withAuthorization(condition),\n)(AdminPage);","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport PasswordForgetPage from '../PasswordForget';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\n\nimport * as ROUTES from '../../constants/routes';\nimport { withAuthentication } from '../Session';\n\nconst App = () => (\n  <Router>\n    <div>\n      <Navigation />\n\n      <hr />\n\n      <Route exact path={ROUTES.LANDING} component={LandingPage} />\n      <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\n      <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\n      <Route\n        exact\n        path={ROUTES.PASSWORD_FORGET}\n        component={PasswordForgetPage}\n      />\n      <Route exact path={ROUTES.HOME} component={HomePage} />\n      <Route exact path={ROUTES.ACCOUNT} component={AccountPage} />\n      <Route exact path={ROUTES.ADMIN} component={AdminPage} />\n    </div>\n  </Router>\n);\n\nexport default withAuthentication(App);","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <FirebaseContext.Provider value={new Firebase()}>\n      <App />\n    </FirebaseContext.Provider>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}